name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
  EMAIL_PROVIDER: ${{ secrets.EMAIL_PROVIDER }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  STAGE: ${{ secrets.STAGE }}

jobs:
  deploy-production:
    name: Deploy Arena Production
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.29

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Create SSH Tunnel
        run: |
          ssh -o StrictHostKeyChecking=no -fN -v -L "$DB_PORT":"$DB_HOST":"$DB_PORT" ${{ secrets.SERVER_SSH_USER }}@${{ secrets.SERVER_HOST_NAME }}

      - name: Sync Database Schema
        env:
          DB_HOST: localhost
        run: |
          bun run db:generate
          bun run db:migrate

      - name: Set App Version
        run: echo "APP_VERSION=$(date +'%Y%m%d%H%M')#$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build App
        env:
          DB_HOST: localhost
          NEXT_TELEMETRY_DISABLED: 1
        run: bun --bun run build

      - name: Package Artifacts
        run: |
          cp -r .next/standalone ./build
          cp -r .next/static ./build/.next/static
          cp -r public/static/* ./build/.next/static

          cd build
          cat <<EOF > app.env
          DB_NAME=$DB_NAME
          DB_HOST=$DB_HOST
          DB_PORT=$DB_PORT
          DB_USER=$DB_USER
          DB_PASS=$DB_PASS
          REDIS_HOST=$REDIS_HOST
          REDIS_PORT=$REDIS_PORT
          AUTH_SECRET=$AUTH_SECRET
          EMAIL_PROVIDER=$EMAIL_PROVIDER
          AWS_REGION=$AWS_REGION
          STAGE=$STAGE
          APP_VERSION=$APP_VERSION
          EOF
          cd ..

          tar czf build.tar.gz ./build

      - name: Deploy To Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST_NAME }}
          username: ${{ secrets.SERVER_SSH_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          source: "./build.tar.gz"
          target: "~/app/tmp"

      - name: Startup New Deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_SSH_USER }}@${{ secrets.SERVER_HOST_NAME }} 'bash -l -c ". ~/app/deploy.sh"'

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Invalidate CF Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} --paths "/*"
